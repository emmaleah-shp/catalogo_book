od <- "~/OCUC/PROYECTOS/catalogo_book/_book"
# rmarkdown::draft(
#   template = "~/OCUC/PROYECTOS/catalogo_book/inst/rmarkdown/templates/capa_plantilla",
#   file = str_glue("{od}/{titulo_capa}.Rmd"),
#   edit = FALSE,
#   params = list(titulo = titulo, show_code = FALSE)
# )
# fecha <- format(Sys.time(), '%d %B, %Y')
# output_name <- str_glue("{titulo_capa}.Rmd")
rmarkdown::render(
input = "~/OCUC/PROYECTOS/catalogo_book/_book/skele.Rmd",
output_format = "all",
output_dir = od,
output_file= str_glue("{amb[i]}_{nombre}.md"),
output_options = list(
lib_dir = "~/OCUC/PROYECTOS/catalogo_book/_book/_book/libs",
css = "~/OCUC/PROYECTOS/catalogo_book/_book/_book/libs/bs4_book-1.0.0/bs4_book.css"
),
params = list(title = titulo,
titulo_capa= titulo_capa,
amb_title= amb_title)
)
}
for (i in 1:5) { #length(shps1)
titulo_capa <- shps1[1]
titulo_sitio <- stringr::str_to_title(stringr::str_replace_all(titulo_capa, '_', ' '))
titulo <- substring(titulo_sitio, first = 4) %>% str_squish()
nombre<- substring(titulo_capa, first = 5) %>% str_squish()
amb_title <- amb[i] %>% str_to_title()
od <- "~/OCUC/PROYECTOS/catalogo_book/_book"
# rmarkdown::draft(
#   template = "~/OCUC/PROYECTOS/catalogo_book/inst/rmarkdown/templates/capa_plantilla",
#   file = str_glue("{od}/{titulo_capa}.Rmd"),
#   edit = FALSE,
#   params = list(titulo = titulo, show_code = FALSE)
# )
# fecha <- format(Sys.time(), '%d %B, %Y')
# output_name <- str_glue("{titulo_capa}.Rmd")
rmarkdown::render(
input = "~/OCUC/PROYECTOS/catalogo_book/_book/skele.Rmd",
output_format = "all",
output_dir = od,
output_file= str_glue("{amb[i]}_{nombre}.md"),
output_options = list(
lib_dir = "~/OCUC/PROYECTOS/catalogo_book/_book/_book/libs",
css = "~/OCUC/PROYECTOS/catalogo_book/_book/_book/libs/bs4_book-1.0.0/bs4_book.css"
),
params = list(title = titulo,
titulo_capa= titulo_capa,
amb_title= amb_title)
)
}
for (i in 1:5) { #length(shps1)
titulo_capa <- shps1[1]
titulo_sitio <- stringr::str_to_title(stringr::str_replace_all(titulo_capa, '_', ' '))
titulo <- substring(titulo_sitio, first = 4) %>% str_squish()
nombre<- substring(titulo_capa, first = 5) %>% str_squish()
amb_title <- amb[i] %>% str_to_title()
od <- "~/OCUC/PROYECTOS/catalogo_book/_book"
# rmarkdown::draft(
#   template = "~/OCUC/PROYECTOS/catalogo_book/inst/rmarkdown/templates/capa_plantilla",
#   file = str_glue("{od}/{titulo_capa}.Rmd"),
#   edit = FALSE,
#   params = list(titulo = titulo, show_code = FALSE)
# )
# fecha <- format(Sys.time(), '%d %B, %Y')
# output_name <- str_glue("{titulo_capa}.Rmd")
rmarkdown::render(
input = "~/OCUC/PROYECTOS/catalogo_book/_book/skele.Rmd",
output_format = "all",
output_dir = od,
output_file= c(str_glue("{amb[i]}_{nombre}.html"), str_glue("{amb[i]}_{nombre}.md")),
output_options = list(
lib_dir = "~/OCUC/PROYECTOS/catalogo_book/_book/_book/libs",
css = "~/OCUC/PROYECTOS/catalogo_book/_book/_book/libs/bs4_book-1.0.0/bs4_book.css"
),
params = list(title = titulo,
titulo_capa= titulo_capa,
amb_title= amb_title)
)
}
for (i in 1:5) { #length(shps1)
titulo_capa <- shps1[1]
titulo_sitio <- stringr::str_to_title(stringr::str_replace_all(titulo_capa, '_', ' '))
titulo <- substring(titulo_sitio, first = 4) %>% str_squish()
nombre<- substring(titulo_capa, first = 5) %>% str_squish()
amb_title <- amb[i] %>% str_to_title()
od <- "~/OCUC/PROYECTOS/catalogo_book/_book"
# rmarkdown::draft(
#   template = "~/OCUC/PROYECTOS/catalogo_book/inst/rmarkdown/templates/capa_plantilla",
#   file = str_glue("{od}/{titulo_capa}.Rmd"),
#   edit = FALSE,
#   params = list(titulo = titulo, show_code = FALSE)
# )
# fecha <- format(Sys.time(), '%d %B, %Y')
# output_name <- str_glue("{titulo_capa}.Rmd")
rmarkdown::render(
input = "~/OCUC/PROYECTOS/catalogo_book/_book/skele.Rmd",
output_format = "all",
output_dir = od,
output_file= str_glue("{amb[i]}_{nombre}"),
output_options = list(
lib_dir = "~/OCUC/PROYECTOS/catalogo_book/_book/_book/libs",
css = "~/OCUC/PROYECTOS/catalogo_book/_book/_book/libs/bs4_book-1.0.0/bs4_book.css"
),
params = list(title = titulo,
titulo_capa= titulo_capa,
amb_title= amb_title)
)
}
shps1
shps1<-arrange(shps1)
shps1<-lapply(shps1, sort)
shps1
shps1 <-st_layers(glue("{path}"))$name
shps1<-sort(shps1)
shps1
shps1<-shps1[1:3,6:9, 39:43, 52:56, 77:80, 83, 99:103, 117:119]
shps1<-shps1[c(1:3,6:9, 39:43, 52:56, 77:80, 83, 99:103, 117:119)]
shps1
amb<-str_extract(shps1, "^\\w{3}")
amb<-amb %>% str_replace_all("MOV", "movilidad") %>%
str_replace_all("BAS", "informacion_base") %>%
str_replace_all("SEG", "seguridad") %>%
str_replace_all("RIE", "riesgos_y_emergencias") %>%
str_replace_all("PLA", "planificacion") %>%
str_replace_all("MED", "medio_ambiente")
library(stringr)
library(rmarkdown)
for (i in 1:length(shps1)) { #length(shps1)
titulo_capa <- shps1[1]
titulo_sitio <- stringr::str_to_title(stringr::str_replace_all(titulo_capa, '_', ' '))
titulo <- substring(titulo_sitio, first = 4) %>% str_squish()
nombre<- substring(titulo_capa, first = 5) %>% str_squish()
amb_title <- amb[i] %>% str_to_title()
od <- "~/OCUC/PROYECTOS/catalogo_book/_book"
# rmarkdown::draft(
#   template = "~/OCUC/PROYECTOS/catalogo_book/inst/rmarkdown/templates/capa_plantilla",
#   file = str_glue("{od}/{titulo_capa}.Rmd"),
#   edit = FALSE,
#   params = list(titulo = titulo, show_code = FALSE)
# )
# fecha <- format(Sys.time(), '%d %B, %Y')
# output_name <- str_glue("{titulo_capa}.Rmd")
rmarkdown::render(
input = "~/OCUC/PROYECTOS/catalogo_book/_book/skele.Rmd",
output_format = "all",
output_dir = od,
output_file= str_glue("{amb[i]}_{nombre}"),
output_options = list(
lib_dir = "~/OCUC/PROYECTOS/catalogo_book/_book/_book/libs",
css = "~/OCUC/PROYECTOS/catalogo_book/_book/_book/libs/bs4_book-1.0.0/bs4_book.css"
),
params = list(title = titulo,
titulo_capa= titulo_capa,
amb_title= amb_title)
)
}
library(stringr)
library(rmarkdown)
for (i in 1:length(shps1)) { #length(shps1)
titulo_capa <- shps1[i]
titulo_sitio <- stringr::str_to_title(stringr::str_replace_all(titulo_capa, '_', ' '))
titulo <- substring(titulo_sitio, first = 4) %>% str_squish()
nombre<- substring(titulo_capa, first = 5) %>% str_squish()
amb_title <- amb[i] %>% str_to_title()
od <- "~/OCUC/PROYECTOS/catalogo_book/_book"
# rmarkdown::draft(
#   template = "~/OCUC/PROYECTOS/catalogo_book/inst/rmarkdown/templates/capa_plantilla",
#   file = str_glue("{od}/{titulo_capa}.Rmd"),
#   edit = FALSE,
#   params = list(titulo = titulo, show_code = FALSE)
# )
# fecha <- format(Sys.time(), '%d %B, %Y')
# output_name <- str_glue("{titulo_capa}.Rmd")
rmarkdown::render(
input = "~/OCUC/PROYECTOS/catalogo_book/_book/skele.Rmd",
output_format = "all",
output_dir = od,
output_file= str_glue("{amb[i]}_{nombre}"),
output_options = list(
lib_dir = "~/OCUC/PROYECTOS/catalogo_book/_book/_book/libs",
css = "~/OCUC/PROYECTOS/catalogo_book/_book/_book/libs/bs4_book-1.0.0/bs4_book.css"
),
params = list(title = titulo,
titulo_capa= titulo_capa,
amb_title= amb_title)
)
}
set.seed(3)
cn<-capa %>% st_drop_geometry() %>% sample_n(10)
amb_title <-stringr::str_replace_all(amb[i], '_', ' ') %>% str_to_title()
for (i in 1:length(shps1)) { #length(shps1)
titulo_capa <- shps1[i]
titulo_sitio <- stringr::str_to_title(stringr::str_replace_all(titulo_capa, '_', ' '))
titulo <- substring(titulo_sitio, first = 4) %>% str_squish()
nombre<- substring(titulo_capa, first = 5) %>% str_squish()
amb_title <-stringr::str_replace_all(amb[i], '_', ' ') %>% str_to_title()
od <- "~/OCUC/PROYECTOS/catalogo_book/_book"
# rmarkdown::draft(
#   template = "~/OCUC/PROYECTOS/catalogo_book/inst/rmarkdown/templates/capa_plantilla",
#   file = str_glue("{od}/{titulo_capa}.Rmd"),
#   edit = FALSE,
#   params = list(titulo = titulo, show_code = FALSE)
# )
# fecha <- format(Sys.time(), '%d %B, %Y')
# output_name <- str_glue("{titulo_capa}.Rmd")
rmarkdown::render(
input = "~/OCUC/PROYECTOS/catalogo_book/_book/skele.Rmd",
output_format = "all",
output_dir = od,
output_file= str_glue("{amb[i]}_{nombre}"),
output_options = list(
lib_dir = "~/OCUC/PROYECTOS/catalogo_book/_book/_book/libs",
css = "~/OCUC/PROYECTOS/catalogo_book/_book/_book/libs/bs4_book-1.0.0/bs4_book.css"
),
params = list(title = titulo,
titulo_capa= titulo_capa,
amb_title= amb_title)
)
}
?rmarkdown::html_document()
?bookdown::bookdown_site()
?bookdown::build_chapter()
for (i in 1:length(shps1)) { #length(shps1)
titulo_capa <- shps1[i]
titulo_sitio <- stringr::str_to_title(stringr::str_replace_all(titulo_capa, '_', ' '))
titulo <- substring(titulo_sitio, first = 4) %>% str_squish()
nombre<- substring(titulo_capa, first = 5) %>% str_squish()
amb_title <-stringr::str_replace_all(amb[i], '_', ' ') %>% str_to_title()
od <- "~/OCUC/PROYECTOS/catalogo_book/_book"
# rmarkdown::draft(
#   template = "~/OCUC/PROYECTOS/catalogo_book/inst/rmarkdown/templates/capa_plantilla",
#   file = str_glue("{od}/{titulo_capa}.Rmd"),
#   edit = FALSE,
#   params = list(titulo = titulo, show_code = FALSE)
# )
# fecha <- format(Sys.time(), '%d %B, %Y')
# output_name <- str_glue("{titulo_capa}.Rmd")
rmarkdown::render(
input = "~/OCUC/PROYECTOS/catalogo_book/_book/skele.Rmd",
output_format = "all",
output_dir = od,
output_file= str_glue("{amb[i]}_{nombre}"),
output_options = list(
lib_dir = "~/OCUC/PROYECTOS/catalogo_book/_book/_book/libs",
css = "~/OCUC/PROYECTOS/catalogo_book/_book/_book/libs/bs4_book-1.0.0/bs4_book.css"
),
params = list(title = titulo,
titulo_capa= titulo_capa,
amb_title= amb_title)
)
}
for (i in 1:length(shps1)) { #length(shps1)
titulo_capa <- shps1[i]
titulo_sitio <- stringr::str_to_title(stringr::str_replace_all(titulo_capa, '_', ' '))
titulo <- substring(titulo_sitio, first = 4) %>% str_squish()
nombre<- substring(titulo_capa, first = 5) %>% str_squish()
amb_title <-stringr::str_replace_all(amb[i], '_', ' ') %>% str_to_title()
od <- "~/OCUC/PROYECTOS/catalogo_book/_book"
# rmarkdown::draft(
#   template = "~/OCUC/PROYECTOS/catalogo_book/inst/rmarkdown/templates/capa_plantilla",
#   file = str_glue("{od}/{titulo_capa}.Rmd"),
#   edit = FALSE,
#   params = list(titulo = titulo, show_code = FALSE)
# )
# fecha <- format(Sys.time(), '%d %B, %Y')
# output_name <- str_glue("{titulo_capa}.Rmd")
rmarkdown::render(
input = "~/OCUC/PROYECTOS/catalogo_book/_book/skele.Rmd",
output_format = "all",
output_dir = od,
output_file= str_glue("{amb[i]}_{nombre}"),
output_options = list(
lib_dir = "~/OCUC/PROYECTOS/catalogo_book/_book/_book/libs",
css = "~/OCUC/PROYECTOS/catalogo_book/_book/_book/libs/bs4_book-1.0.0/bs4_book.css"
),
params = list(title = titulo,
titulo_capa= titulo_capa,
amb_title= amb_title)
)
}
for (i in 1:length(shps1)) { #length(shps1)
titulo_capa <- shps1[i]
titulo_sitio <- stringr::str_to_title(stringr::str_replace_all(titulo_capa, '_', ' '))
titulo <- substring(titulo_sitio, first = 4) %>% str_squish()
nombre<- substring(titulo_capa, first = 5) %>% str_squish()
amb_title <-stringr::str_replace_all(amb[i], '_', ' ') %>% str_to_title()
od <- "~/OCUC/PROYECTOS/catalogo_book/_book"
# rmarkdown::draft(
#   template = "~/OCUC/PROYECTOS/catalogo_book/inst/rmarkdown/templates/capa_plantilla",
#   file = str_glue("{od}/{titulo_capa}.Rmd"),
#   edit = FALSE,
#   params = list(titulo = titulo, show_code = FALSE)
# )
# fecha <- format(Sys.time(), '%d %B, %Y')
# output_name <- str_glue("{titulo_capa}.Rmd")
rmarkdown::render(
input = "~/OCUC/PROYECTOS/catalogo_book/_book/skele.Rmd",
output_format = "all",
output_dir = od,
output_file= str_glue("{amb[i]}_{nombre}"),
output_options = list(
lib_dir = "~/OCUC/PROYECTOS/catalogo_book/_book/_book/libs",
css = "~/OCUC/PROYECTOS/catalogo_book/_book/_book/libs/bs4_book-1.0.0/bs4_book.css"
),
params = list(title = titulo,
titulo_capa= titulo_capa,
amb_title= amb_title)
)
}
require(sf)
capa<-sf::st_read(path, layer=str_glue("{titulo_capa}"))
obs<- dim(capa)
library(dplyr)
capa_diagnosis<-diagnosticar(capa)
require(knitr)
require(flextable)
library(magrittr)
colourer <- col_bin(
palette = c("#DD3E2C","transparent"),
domain = c(0,100),
bins = c(0, 99,100))
colourer2 <- col_numeric(
palette = c("#ABD9E9","#FFFFBF"),
domain = c(0,100))
ft <- flextable(capa_diagnosis)
ft <- theme_booktabs(ft, bold_header = TRUE) %>%
flextable::align(align = "center", part="all") %>%
bg(bg = colourer, j = ~ pc_completo, part = "body") %>%
bg(bg = colourer2, j = ~ pc_repetido, part = "body") %>%
colformat_double(j = ~ pc_completo, digits = 2) %>%
colformat_double(j = ~ pc_repetido, digits = 2) %>%
fontsize(part = "all", size=9)
# autofit(ft)
ft
library(dplyr)
capa_diagnosis<-diagnosticar(capa)
require(knitr)
require(flextable)
library(magrittr)
colourer <- col_bin(
palette = c("#DD3E2C","transparent"),
domain = c(0,100),
bins = c(0, 99,100))
colourer2 <- col_numeric(
palette = c("#ABD9E9","#FFFFBF"),
domain = c(0,100))
ft <- flextable(capa_diagnosis)
ft <- theme_booktabs(ft, bold_header = TRUE) %>%
flextable::align(align = "center", part="all") %>%
bg(bg = colourer, j = ~ pc_completo, part = "body") %>%
bg(bg = colourer2, j = ~ pc_repetido, part = "body") %>%
colformat_double(j = ~ pc_completo, digits = 2) %>%
colformat_double(j = ~ pc_repetido, digits = 2) %>%
fontsize(part = "all", size=9)
# autofit(ft)
ft
set.seed(3)
cn<-capa %>% st_drop_geometry() %>% sample_n(10)
cn<-cn  %>% t() %>% data.frame() %>% rownames_to_column()
names(cn)[1]<-"Nombre_columna"
cn <- cn %>%
rowwise() %>%
mutate(Observaciones = paste(c_across(2:ncol(.)), collapse = ", ")) %>%
ungroup()
cn<- cn %>% select(Nombre_columna, Observaciones)
library(gt)
cnt<- cn %>%
gt() %>%
tab_header(
title = "Muestra de 10 filas de los datos",
subtitle = glue::glue("Ámbito {amb_title}")
) %>%
tab_style_body(style = cell_fill(color="lightgrey"),
values = "region",
targets = "column")
cnt
cn %>%
gt() %>%
tab_header(
title = "Muestra de 10 filas de los datos",
subtitle = glue::glue("Ámbito {amb_title}")) %>%
tab_style_body(
style = cell_fill(color="lightgrey"),
values = "region",
targets = "column")
cn %>%
gt() %>%
tab_header(
title = "Muestra de 10 filas de los datos",
subtitle = glue::glue("Ámbito {amb_title}")) %>%
gt::tab_style_body(
style = cell_fill(color="lightgrey"),
values = "region",
targets = "column")
set.seed(3)
cn<-capa %>% st_drop_geometry() %>% sample_n(10)
cn<-cn  %>% t() %>% data.frame() %>% rownames_to_column()
names(cn)[1]<-"Nombre_columna"
cn <- cn %>%
rowwise() %>%
mutate(Observaciones = paste(c_across(2:ncol(.)), collapse = ", ")) %>%
ungroup()
cn<- cn %>% select(Nombre_columna, Observaciones)
library(gt)
cnt <- cn |>
gt() |>
tab_header(
title = "Muestra de 10 filas de los datos",
subtitle = glue::glue("Ámbito {amb_title}")) |>
gt::tab_style_body(
style = cell_fill(color="lightgrey"),
values = "region",
targets = "column")
cnt
library(sf)
library(ggplot2)
library(tmap)
library(ggmap)
ex <- st_bbox(capa)
ex<-st_as_sfc(ex)%>%
st_as_sf()
ex<-sf::st_transform(ex, 4326)
st_crs(ex) <- 4326
exx <- st_bbox(ex)
left<- as.double(exx[1])
bottom<- as.double(exx[2])
right<-as.double(exx[3])
top<-as.double(exx[4])
library(sf)
library(leaflet)
library(mapview)
library(webshot)
library(htmlwidgets)
m <-leaflet() %>% addTiles() %>%
addRectangles(
lng1=left, lat1=top,
lng2=right, lat2=bottom,
color="#03F",
fillColor = "transparent"
)
# mapshot(m, file =  glue("images/{titulo_capa}_plot.png"))
# knitr::include_graphics( glue("images/{titulo_capa}_plot.png"))
m
class(capa)
st_geometry_type(capa)
st_geometry_type(capa) %>% summary()
geometry(capa)
st_geometry_type(capa[1])
st_geometry_type(capa[1,])
geometry_type<-st_geometry_type(capa[1,])
geometry_type
is_polygon <- (geometry_type == "POLYGON")
is_polygon <- (geometry_type == "POLYGON" | geometry_type == "MULTIPOLYGON" )
st_geometry_type(capa) %>% summary()
mapview?
?mapview
?mapview::mapview
library(sf)
library(ggplot2)
library(tmap)
library(ggmap)
ex <- st_bbox(capa)
ex<-st_as_sfc(ex)%>%
st_as_sf()
exx<-sf::st_transform(ex, 4326)
st_crs(exx) <- 4326
exy <- st_bbox(exy)
library(sf)
library(ggplot2)
library(tmap)
library(ggmap)
ex <- st_bbox(capa)
ex<-st_as_sfc(ex)%>%
st_as_sf()
exx<-sf::st_transform(ex, 4326)
st_crs(exx) <- 4326
exy <- st_bbox(exx)
left<- as.double(exy[1])
bottom<- as.double(exy[2])
right<-as.double(exy[3])
top<-as.double(exy[4])
# m <-leaflet() %>% addTiles() %>%
#   addRectangles(
#     lng1=left, lat1=top,
#     lng2=right, lat2=bottom,
#     color="#03F",
#     fillColor = "transparent"
#   )
mapview::mapview(capa) + ex
library(sf)
library(leaflet)
library(mapview)
library(webshot)
library(htmlwidgets)
# geometry_type<-st_geometry_type(capa[1,])
# is_polygon <- (geometry_type == "POLYGON" | geometry_type == "MULTIPOLYGON" )
# is_point <- (geometry_type == "POINT" | geometry_type == "MULTIPOINT" )
# is_line <- (geometry_type == "LINESTRING" | geometry_type == "MULTILINESTRING" )
# m <-leaflet() %>% addTiles() %>%
#   addRectangles(
#     lng1=left, lat1=top,
#     lng2=right, lat2=bottom,
#     color="#03F",
#     fillColor = "transparent"
#   )
mapview(capa) + mapview(ex)
mapview(capa) + mapview(ex)
mapview(capa) + mapview(exx)
mapview(capa) + mapview(exx, color = "grey")
mapview(capa) + mapview(exx, color = "grey")
